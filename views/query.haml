%header
  .page-header
    %h1= page.titlecase

  .row
    .span12
      %form.well.form-inline{action: relative_uri('submit'), method: 'get'}
        %input.span4.search-query{name: 'tag_query', type: 'text', placeholder: 'comma separated tags', value: tag_query_string}
        %label
          form
        .input-append
          %input.datepicker{name: 'time_from_date', type: 'text', style: 'width: 5em', value: time_from_date, 'data-date-format' => 'mm/dd/yy'}>
          %input.timepicker{name: 'time_from_time', type: 'text', style: 'width: 5em', value: time_from_time}>
          %button.btn{type: 'button'}>
            now

        %label
          span
        .input-append
          %input{name: 'time_span_value', type: 'text', style: 'width: 2em', value: time_span_value || 1}>
          %select.input-small{name: 'time_span_unit'}>
            - %w{ Minutes Hours Days Weeks Months Years }.each do |unit|
              %option{selected: time_span_unit == unit}>= unit

        %button.btn.btn-primary{type: 'submit'}
          Query

      :javascript
        $('.datepicker').datepicker()
        $('.timepicker').timepicker({
          defaultTime: 'current',
          minuteStep: 15,
          template: 'dropdown'
        });


  - unless tag_query.empty?
    .row
      .span12
        .alert.alert-info
          Quering for:
          - tag_query.each_with_index do |tag_expression, set_no|
            %strong= tag_expression
            - if set_no + 1 < tag_query.length
              end

- tag_query.each_with_index do |tag_expression, set_no|
  %section
    .page-header
      %h2
        Results for query: #{tag_expression}
    .row
      .span12
        %div{id: "graph_container_#{set_no}"}

        :javascript
          var graph_no = 1;
          $.eventsource({
            label: 'TagExpression-#{tag_expression}',
            url: '#{root_uri('feed', 'query', tag_expression, time_span: time_span)}',
            dataType: 'json',

            open: function() {
            },

            message: function(data) {
              var series = new Array()

              for (key in data.series) {
                series.push({
                  label: key,
                  data: data.series[key]
                })
              }

              $("#graph_container_#{set_no}").append("<h3>" + data.title + "</h3>")
              $("#graph_container_#{set_no}").append("<div style='width: 100%; height:240px' id='graph_#{set_no}" + graph_no + "'></div>")

              $.plot($("#graph_#{set_no}" + graph_no), series, {
                    xaxis: {
                      mode: "time",
                      timeformat: "%y/%m/%d %H:%M:%S",
                      min: data.time_start,
                      max: data.time_end
                    },
                    yaxis: {
                      tickFormatter: function(val, axis) {
                        base = 1000
                        high_units = ['k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']
                        low_units = ['m', '&micro;', 'n', 'p', 'f', 'a', 'z', 'y']

                        unit = ''

                        if (Math.abs(val) > 999) {
                          while (Math.abs(val) > base - 1) {
                            unit = high_units.shift()
                            val /= base
                          }
                        } else if (Math.abs(val) < 1.0 && Math.abs(val) > 0.0) {
                          while (Math.abs(val) < 1.0) {
                            unit = low_units.shift()
                            val *= base
                          }
                        }
                        
                        return val.toFixed(0) + ' ' + unit + data.value_unit;
                      }
                    },
                    legend: {
                      position: 'nw'
                    },
                    series: {
                      stack: true,
                      lines: { 
                        show: true, 
                        fill: true, 
                        steps: true 
                      }
                    }
                  }
              )
              graph_no += 1
            }
          })

:javascript
  $('.btn').button();

